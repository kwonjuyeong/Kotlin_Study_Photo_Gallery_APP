package com.jyeong.photogallery.ChapterMemo

/*
Chapter 31
속성 애니메이션

앱의 UI에 생동감을 주려면 애니메이션을 주어야 한다.
목표 : SunSet 앱을 통해 애니메이션 구현하기

장면 생성하기
- color.xml에 사용할 색상을 추가한다.
- 일몰을 위한 태양을 xml에 그린다.

간단한 속성 애니메이션
- 장면이 준비되었다. 태양이 수평선 아래로 움직이느느 애니메이션을 만든다.
1. 애니메이션의 시작과 끝 위치를 찾아야 한다(startAnimation 함수)
- View에는 자신 주위의 사각형 경계 위치(local layout rect)와 크기 값을 갖는 top, bottom, right, left 속성이 있다.
- 이 속성들의 값은 해당 뷰가 레이아웃에 배치되면 부모 뷰와 관련하여 결정된다.
- 애니메이션이 태양(sunView)의 꼭대기(top.Float())로부터 시작해 이것의 부모인 하늘(skyView)의 밑바닥(height.toFloat())에서 끝나는데
height 속성값은 bottom 속성값에서 top 속성값을 뺸 것과 같다.

애니메이션 수행하기
- ObjectAnimator를 생성해 실행한다.
- ObjectAnimator는 속성 애니메이터로 화면에서 뷰를 움직이는 방법을 사용한 것이 아니라 해당 속성값을 다르게 전달해서 속성의 세터 함수를 "반복적으로 호출"한다.
- 시작과 끝 지점 사이의 값을 찾는 것을 인터폴레이션이라고 한다.
- 각 중간 값 사이에는 지연 시간이 있어서 뷰가 움직이는 것처럼 보이게 한다.

뷰 변형 속성
- 속성 애니메이터는 훌륭하지만 뷰의 애니메이션을 다양하게 만들수는 없다.
- 따라서 안드로이드 속성 애니메이션은 변형 속성(transformation property)와 함께 작동한다.
- 뷰는 레이아웃에 배치될 때 지정되는 위치와 크기를 가지며, 이 값들을 네 개의 속성에 설정된다.
- 여기에 뷰의 변형 속성들을 추가해 설정하면 뷰를 움직일 수 있다.
- 화면에서 뷰를 회전시키는 속성은 rotation, pivotX, pivotY가 있다.
- 뷰의 크기를 수직 방향과 수평 방향으로 조정하는 속성에는 scaleX와 scaleY가 있다.
- 뷰를 화면에서 이동시키는 속성에는 translationX와 translationY가 있다.

다른 인터폴레이션 사용하기
- 태양이 처음에는 서서히 움직이다가 점점 속도가 빨라지는 것을 구현하려면 어떻게 해야할까?
- TimeInterpolator 인터페이스는 애니메이션이 A 지점에서 B 지점으로 진행되는 방식을 변경한다.

색상 값 산출하기
- TypeEvaluator의 서브 클래스를 사용하여 색상을 천천히 바뀌도록 산출할 수 있다.
- TypeEvaluator는 ObjectAnimator에 시작과 끝 사이의 값을 알려주는 객체로, 전체 값의 1/4씩을 산출해서 전달한다.
- 안드로이드는 TypeEvaluator의 서브 클래스인 ArgbEvaluator를 제공하므로 여기서는 이 클래스를 사용한다.
*/